[{"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\index.tsx":"1","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\tasks\\tasks.tsx":"2","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\App.tsx":"3","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\reportWebVitals.ts":"4","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\task\\task.tsx":"5","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\task\\add-task\\add-task.tsx":"6","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\utils\\items.tsx":"7","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\task\\edit-task\\edit-task.tsx":"8","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\model\\ITask.tsx":"9"},{"size":501,"mtime":1612430461097,"results":"10","hashOfConfig":"11"},{"size":17182,"mtime":1612522176878,"results":"12","hashOfConfig":"11"},{"size":325,"mtime":1612368647281,"results":"13","hashOfConfig":"11"},{"size":425,"mtime":1612182902774,"results":"14","hashOfConfig":"11"},{"size":6904,"mtime":1612533264304,"results":"15","hashOfConfig":"11"},{"size":4384,"mtime":1612527081062,"results":"16","hashOfConfig":"11"},{"size":1785,"mtime":1612507066298,"results":"17","hashOfConfig":"11"},{"size":19963,"mtime":1612534513493,"results":"18","hashOfConfig":"11"},{"size":412,"mtime":1612450412017,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eh9pso",{"filePath":"22","messages":"23","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\index.tsx",[],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\tasks\\tasks.tsx",["40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\App.tsx",[],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\reportWebVitals.ts",[],["61","62"],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\task\\task.tsx",["63","64","65","66","67","68","69","70","71"],"import { Checkbox, Chip, IconButton, List, ListItem, ListItemIcon, ListItemText, Popover, Tooltip } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedOutlinedIcon from '@material-ui/icons/RadioButtonUncheckedOutlined';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from '../../utils/items';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport './task.scss';\r\n\r\nfunction Task({ bucketIndex, task, updateTaskStatus, onEditTask, onUpdateCheckList, onDeleteTask }) {\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: {\r\n            type: ItemTypes.CARD,\r\n            taskId: task.taskId,\r\n            bucketIndex: bucketIndex\r\n        },\r\n        collect: monitor => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    })\r\n\r\n    function updateStatus(ev) {\r\n        updateTaskStatus({ bucketIndex: bucketIndex, taskId: task.taskId, updatedTaskStatus: ev.target.checked });\r\n    }\r\n\r\n    function updateCheckList(checkList) {\r\n        onUpdateCheckList({ bucketIndex: bucketIndex, taskId: task.taskId, checkList: checkList })\r\n    }\r\n\r\n    function editTask() {\r\n        onEditTask({ task, bucketIndex });\r\n    }\r\n\r\n    function getDateFormat(dueDate) {\r\n        const date = new Date(dueDate);\r\n        return `${date.getMonth() + 1}/${date.getDate()}`\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    function handleClose() {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    function deleteTask(taskId) {\r\n        onDeleteTask(bucketIndex, taskId)\r\n    }\r\n\r\n    return <div className=\"task\" ref={drag} style={{ opacity: isDragging ? '0.5' : '1' }}>\r\n\r\n        <div className=\"task-more-options\">\r\n            <IconButton onClick={(e: any) => { setAnchorEl(e.currentTarget); }} color=\"primary\" component=\"span\">\r\n                <MoreHorizIcon />\r\n            </IconButton>\r\n\r\n            <Popover id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}>\r\n                <List style={{ width: 200 }}\r\n                    onMouseLeave={handleClose}>\r\n                    <ListItem button onClick={() => { deleteTask(task.taskId) }}>\r\n                        <ListItemText primary=\"Delete\" />\r\n                    </ListItem>\r\n                </List>\r\n\r\n            </Popover>\r\n        </div>\r\n\r\n        <div className=\"label\" onClick={editTask}>\r\n            {\r\n                task.label.map((d, labelIndex: number) => {\r\n                    return <Chip key={labelIndex} label={d.name} style={{ backgroundColor: d.color }} variant=\"outlined\" />\r\n                })\r\n            }\r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Checkbox color=\"primary\" icon={<RadioButtonUncheckedOutlinedIcon />} checkedIcon={<CheckCircleIcon />} name=\"taskCheck\"\r\n                onChange={updateStatus} checked={task.progress.name == \"Completed\"} />\r\n            <p onClick={editTask} className=\"w-100\" style={{ textDecoration: task.progress.name == \"Completed\" ? 'line-through' : 'none' }}>{task.taskName}</p>\r\n        </div>\r\n\r\n        {\r\n            task.showCheckListOnCard == true && task.checkList.length > 0 && task.checkList.map((d: any, checkListIndex: number) => {\r\n                return !d.isCompleted ? <div key={checkListIndex} className=\"d-flex align-items-center\">\r\n                    <Checkbox color=\"primary\" icon={<RadioButtonUncheckedOutlinedIcon />} checkedIcon={<CheckCircleIcon />} name={`checklist-${checkListIndex}`}\r\n                        checked={d.completed} onChange={(ev) => {\r\n                            const checkList = task.checkList;\r\n                            checkList[checkListIndex].isCompleted = ev.target.checked;\r\n                            updateCheckList(checkList);\r\n                        }} />\r\n                    <p className=\"w-100\" onClick={editTask}>{d.text}</p>\r\n                </div> : \"\"\r\n            })\r\n        }\r\n\r\n        {\r\n            task.showNotesOnCard == true && task.notes.trim() != \"\" && <div onClick={editTask}>\r\n                <span className=\"notes\">\r\n                    {task.notes}\r\n                </span>\r\n            </div>\r\n        }\r\n\r\n        <div onClick={editTask}>\r\n            {\r\n                task.assignedTo.map((assignedTo: any, taskAssignedToIndex: number) => {\r\n                    return <ListItem key={taskAssignedToIndex} className=\"pt-0 px-0\">\r\n                        <ListItemIcon className=\"list-item-width\">\r\n                            <AccountCircle />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={assignedTo.name} />\r\n                    </ListItem>\r\n                })\r\n            }\r\n        </div>\r\n\r\n        <div className=\"d-flex gap-5\">\r\n            {\r\n                task.priority.name != \"Medium\" && <Tooltip title={task.priority.name}>\r\n                    <span className=\"d-flex align-items-center\" style={{ color: task.priority.color }} onClick={editTask}>\r\n                        {task.priority.icon}\r\n                    </span>\r\n                </Tooltip>\r\n            }\r\n\r\n            {\r\n                task.progress.name == \"In Progress\" && <Tooltip title={task.progress.name}>\r\n                    <span className=\"d-flex align-items-center\" style={{ color: task.progress.color }} onClick={editTask}>\r\n                        {task.progress.icon}\r\n                    </span>\r\n                </Tooltip>\r\n            }\r\n\r\n            {\r\n                task.dueDate && task.dueDate != \"\" && <Tooltip title=\"Due date\">\r\n                    <span className=\"text-with-icon\">\r\n                        <CalendarTodayIcon />{getDateFormat(task.dueDate)}\r\n                    </span>\r\n                </Tooltip>\r\n            }\r\n\r\n            {\r\n                task.showCheckListOnCard == true && task.checkList.length > 0 && <Tooltip title={`${task.checkList.filter(d => d.isCompleted).length} of ${task.checkList.length} checklist items complete`}>\r\n                    <span className=\"text-with-icon\">\r\n                        <CheckCircleOutlineIcon />{task.checkList.filter(d => d.isCompleted).length}/{task.checkList.length}\r\n                    </span>\r\n                </Tooltip>\r\n            }\r\n        </div>\r\n\r\n    </div >\r\n}\r\n\r\nexport default Task;","D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\task\\add-task\\add-task.tsx",["72","73","74","75","76","77"],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\utils\\items.tsx",[],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\components\\task\\edit-task\\edit-task.tsx",["78","79","80","81","82","83","84","85","86"],"D:\\Projects\\Company Interviews\\Vebholic\\tasks-by-planner\\src\\model\\ITask.tsx",[],{"ruleId":"87","severity":1,"message":"88","line":49,"column":50,"nodeType":"89","messageId":"90","endLine":49,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":50,"column":11,"nodeType":"93","messageId":"94","endLine":50,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":50,"column":50,"nodeType":"89","messageId":"90","endLine":50,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":51,"column":49,"nodeType":"89","messageId":"90","endLine":51,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":60,"column":39,"nodeType":"89","messageId":"90","endLine":60,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":64,"column":77,"nodeType":"89","messageId":"90","endLine":64,"endColumn":79},{"ruleId":"87","severity":1,"message":"88","line":65,"column":128,"nodeType":"89","messageId":"90","endLine":65,"endColumn":130},{"ruleId":"87","severity":1,"message":"88","line":76,"column":77,"nodeType":"89","messageId":"90","endLine":76,"endColumn":79},{"ruleId":"87","severity":1,"message":"88","line":81,"column":100,"nodeType":"89","messageId":"90","endLine":81,"endColumn":102},{"ruleId":"87","severity":1,"message":"88","line":99,"column":50,"nodeType":"89","messageId":"90","endLine":99,"endColumn":52},{"ruleId":"87","severity":1,"message":"95","line":103,"column":50,"nodeType":"89","messageId":"90","endLine":103,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":113,"column":64,"nodeType":"89","messageId":"90","endLine":113,"endColumn":66},{"ruleId":"87","severity":1,"message":"88","line":126,"column":64,"nodeType":"89","messageId":"90","endLine":126,"endColumn":66},{"ruleId":"87","severity":1,"message":"95","line":152,"column":31,"nodeType":"89","messageId":"90","endLine":152,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":221,"column":44,"nodeType":"89","messageId":"90","endLine":221,"endColumn":46},{"ruleId":"87","severity":1,"message":"88","line":221,"column":87,"nodeType":"89","messageId":"90","endLine":221,"endColumn":89},{"ruleId":"87","severity":1,"message":"88","line":223,"column":86,"nodeType":"89","messageId":"90","endLine":223,"endColumn":88},{"ruleId":"87","severity":1,"message":"88","line":237,"column":95,"nodeType":"89","messageId":"90","endLine":237,"endColumn":97},{"ruleId":"87","severity":1,"message":"88","line":314,"column":75,"nodeType":"89","messageId":"90","endLine":314,"endColumn":77},{"ruleId":"87","severity":1,"message":"88","line":323,"column":71,"nodeType":"89","messageId":"90","endLine":323,"endColumn":73},{"ruleId":"87","severity":1,"message":"88","line":328,"column":111,"nodeType":"89","messageId":"90","endLine":328,"endColumn":113},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"87","severity":1,"message":"88","line":93,"column":69,"nodeType":"89","messageId":"90","endLine":93,"endColumn":71},{"ruleId":"87","severity":1,"message":"88","line":94,"column":97,"nodeType":"89","messageId":"90","endLine":94,"endColumn":99},{"ruleId":"87","severity":1,"message":"88","line":98,"column":38,"nodeType":"89","messageId":"90","endLine":98,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":112,"column":34,"nodeType":"89","messageId":"90","endLine":112,"endColumn":36},{"ruleId":"87","severity":1,"message":"95","line":112,"column":63,"nodeType":"89","messageId":"90","endLine":112,"endColumn":65},{"ruleId":"87","severity":1,"message":"95","line":134,"column":36,"nodeType":"89","messageId":"90","endLine":134,"endColumn":38},{"ruleId":"87","severity":1,"message":"88","line":142,"column":36,"nodeType":"89","messageId":"90","endLine":142,"endColumn":38},{"ruleId":"87","severity":1,"message":"95","line":150,"column":46,"nodeType":"89","messageId":"90","endLine":150,"endColumn":48},{"ruleId":"87","severity":1,"message":"88","line":158,"column":42,"nodeType":"89","messageId":"90","endLine":158,"endColumn":44},{"ruleId":"91","severity":1,"message":"100","line":4,"column":28,"nodeType":"93","messageId":"94","endLine":4,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":32,"column":49,"nodeType":"89","messageId":"90","endLine":32,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":34,"column":49,"nodeType":"89","messageId":"90","endLine":34,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":51,"column":49,"nodeType":"89","messageId":"90","endLine":51,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":53,"column":49,"nodeType":"89","messageId":"90","endLine":53,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":114,"column":136,"nodeType":"89","messageId":"90","endLine":114,"endColumn":138},{"ruleId":"87","severity":1,"message":"88","line":68,"column":64,"nodeType":"89","messageId":"90","endLine":68,"endColumn":66},{"ruleId":"87","severity":1,"message":"88","line":69,"column":80,"nodeType":"89","messageId":"90","endLine":69,"endColumn":82},{"ruleId":"87","severity":1,"message":"88","line":70,"column":63,"nodeType":"89","messageId":"90","endLine":70,"endColumn":65},{"ruleId":"87","severity":1,"message":"88","line":70,"column":107,"nodeType":"89","messageId":"90","endLine":70,"endColumn":109},{"ruleId":"87","severity":1,"message":"88","line":135,"column":95,"nodeType":"89","messageId":"90","endLine":135,"endColumn":97},{"ruleId":"87","severity":1,"message":"88","line":157,"column":96,"nodeType":"89","messageId":"90","endLine":157,"endColumn":98},{"ruleId":"87","severity":1,"message":"88","line":182,"column":96,"nodeType":"89","messageId":"90","endLine":182,"endColumn":98},{"ruleId":"87","severity":1,"message":"95","line":241,"column":50,"nodeType":"89","messageId":"90","endLine":241,"endColumn":52},{"ruleId":"87","severity":1,"message":"95","line":336,"column":70,"nodeType":"89","messageId":"90","endLine":336,"endColumn":72},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'inProgress' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]